//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : TravelRequest.java
//  @ Date : 09-04-2010
//  @ Author : 
//
//
package com.sony.travelRequest.model;

import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;


public class TravelRequest {
	
	private int id;
	private String status;
	private float amount;
	private String type;
	private String payment;
	private Date date;
	private boolean control;
	private List<HotelResv> hotelResv = new ArrayList<HotelResv>();
	private List<TravelResv> travelResv = new ArrayList<TravelResv>();
	private List<RequestApproval> requestApprovals = new ArrayList<RequestApproval>();
	private TravelDetails travelDetails = new TravelDetails();
	private Employee employee = new Employee();
	private boolean showTravelApproval;
	
	public TravelRequest() {
		this.date = Calendar.getInstance().getTime();
		hotelResv.add(new HotelResv());
		travelResv.add(new TravelResv());
	}

	public int getId() {
		return id;
	}

	public void setId(int id) {
		this.id = id;
	}

	public String getStatus() {
		return status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	public float getAmount() {
		return amount;
	}

	public void setAmount(float amount) {
		this.amount = amount;
	}

	public String getType() {
		return type;
	}

	public void setType(String type) {
		this.type = type;
	}

	public String getPayment() {
		return payment;
	}

	public void setPayment(String payment) {
		this.payment = payment;
	}

	public Date getDate() {
		return date;
	}

	public void setDate(Date date) {
		this.date = date;
	}

	public boolean isControl() {
		return control;
	}

	public void setControl(boolean control) {
		this.control = control;
	}

	public List<HotelResv> getHotelResv() {
		return hotelResv;
	}

	public void setHotelResv(List<HotelResv> hotelResv) {
		this.hotelResv = hotelResv;
	}

	public List<TravelResv> getTravelResv() {
		return travelResv;
	}

	public void setTravelResv(List<TravelResv> travelResv) {
		this.travelResv = travelResv;
	}

	public List<RequestApproval> getRequestApprovals() {
		return requestApprovals;
	}

	public void setRequestApprovals(List<RequestApproval> requestApprovals) {
		this.requestApprovals = requestApprovals;
	}

	public TravelDetails getTravelDetails() {
		return travelDetails;
	}

	public void setTravelDetails(TravelDetails travelDetails) {
		this.travelDetails = travelDetails;
	}

	public Employee getEmployee() {
		return employee;
	}

	public void setEmployee(Employee employee) {
		this.employee = employee;
	}

	public void calcStatus() {
	
	}
	
	public void calcAmount() {
	
	}
	
	public void addTravelResvRow() {

		travelResv.add(new TravelResv());
	}
	
	public void addHotelResvRow() {

		hotelResv.add(new HotelResv());
	}

	public boolean isShowTravelApproval() {
		return showTravelApproval;
	}

	public void setShowTravelApproval(boolean showTravelApproval) {
		this.showTravelApproval = showTravelApproval;
	}

	public String getEmailBodyForEmployeeInitiation() {
		StringBuilder emailBody = new StringBuilder("You initiated a new travel request. Please click this url to see the summary and status of your request:");
		emailBody.append(" http://localhost:8080/travel/travelFormSum.faces?reqId=").append(getId());
		return emailBody.toString();
	}
	
	public String getEmailSubjectForEmployeeInitiation() {
		StringBuilder emailHeader = new StringBuilder("Travel Request initiated with Id:").append(getId());
		return emailHeader.toString();
	}

	public String getEmailBodyForEmployeeTravelDeskApproved(boolean approved, String comments) {
		String approvedStr = null;
		if(approved) {
			approvedStr = "approved";
		}else { 
			approvedStr = "rejected";
		}

		StringBuilder emailBody = new StringBuilder("Your travel request with id:").append(getId()).append(" has been ");
		emailBody.append(approvedStr)/*.append( with the following comments:")*/;
		emailBody.append(". Please click this url to see the details of your request:");
		emailBody.append(" http://localhost:8080/travel/travelFormSum.faces?reqId=").append(getId());
		return emailBody.toString();
	}
	
	public String getEmailSubjectForEmployeeTravelDeskApproved(boolean approved) {
		String approvedStr = null;
		if(approved) {
			approvedStr = "approved";
		}else { 
			approvedStr = "rejected";
		}

		StringBuilder emailHeader = new StringBuilder("Travel Request ").append(approvedStr).append(" for Id:"+getId());
		return emailHeader.toString();
	}

	public String getEmailBodyForTravelDesk() {
		StringBuilder emailBody = new StringBuilder("A new Travel request is awaiting for your approval. Please click this url to work on this request:");
		emailBody.append(" http://localhost:8080/travel/travelFormSum.faces?reqId=").append(getId()).append("&role=travel");
		return emailBody.toString();
	}
	
	public String getEmailSubjectForTravelDesk() {
		StringBuilder emailBody = new StringBuilder("Travel request Id ").append(getId()).append(" waiting for your action");
		return emailBody.toString();
	}

}
